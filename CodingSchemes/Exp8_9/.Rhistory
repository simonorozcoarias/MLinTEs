pval = chicuadrado$p.value
if(pval < 0.05 ){
asociaciones <- rbind(asociaciones, c(dataframe[i,1], dataframe[i,2], dataframe[i,3]))
}
}
View(asociaciones)
for (i in 1:6929){
dataframe[i,2]
}
for (i in 1:6929){
message(paste0(dataframe[i,1], "sitio %"))
}
asociaciones = data.frame()
for (i in 1:6929){
casoSi = dataframe[i,2]
casoNo = 30-dataframe[i,2]
controlSi = dataframe[i,3]
controlNo = 30-dataframe[i,3]
data = matrix(c(casoSi,controlSi,casoNo,controlNo), nrow=2, byrow=TRUE)
chicuadrado = chisq.test(data)
pval = chicuadrado$p.value
message(paste0(dataframe[i,1], " sitio "))
if(pval < 0.05 ){
asociaciones <- rbind(asociaciones, c(dataframe[i,1], dataframe[i,2], dataframe[i,3]))
}
}
View(asociaciones)
asociaciones = data.frame()
for (i in 1:6929){
casoSi = dataframe[i,2]
casoNo = 30-dataframe[i,2]
controlSi = dataframe[i,3]
controlNo = 30-dataframe[i,3]
data = matrix(c(casoSi,controlSi,casoNo,controlNo), nrow=2, byrow=TRUE)
chicuadrado = chisq.test(data)
pval = chicuadrado$p.value
if(pval < 0.05 ){
message(paste0(dataframe[i,1], " "))
asociaciones <- rbind(asociaciones, c(dataframe[i,1], dataframe[i,2], dataframe[i,3]))
}
}
asociaciones = data.frame()
for (i in 1:6929){
casoSi = dataframe[i,2]
casoNo = 30-dataframe[i,2]
controlSi = dataframe[i,3]
controlNo = 30-dataframe[i,3]
data = matrix(c(casoSi,controlSi,casoNo,controlNo), nrow=2, byrow=TRUE)
chicuadrado = chisq.test(data)
pval = chicuadrado$p.value
if(pval < 0.05 ){
message(paste0(c(dataframe[i,1], dataframe[i,2], dataframe[i,3]), " "))
asociaciones <- rbind(asociaciones, c(dataframe[i,1], dataframe[i,2], dataframe[i,3]))
}
}
asociaciones = data.frame()
names(asociaciones)<-c("Insertion","Case", "Control")
for (i in 1:6929){
casoSi = dataframe[i,2]
casoNo = 30-dataframe[i,2]
controlSi = dataframe[i,3]
controlNo = 30-dataframe[i,3]
data = matrix(c(casoSi,controlSi,casoNo,controlNo), nrow=2, byrow=TRUE)
chicuadrado = chisq.test(data)
pval = chicuadrado$p.value
if(pval < 0.05 ){
message(paste0(c(dataframe[i,1], dataframe[i,2], dataframe[i,3]), " "))
asociaciones <- rbind(asociaciones, c(dataframe[i,1], dataframe[i,2], dataframe[i,3]))
}
}
View(asociaciones)
asociaciones = data.frame()
names(asociaciones)<-c("Insertion","Case", "Control")
for (i in 1:6929){
casoSi = dataframe[i,2]
casoNo = 30-dataframe[i,2]
controlSi = dataframe[i,3]
controlNo = 30-dataframe[i,3]
data = matrix(c(casoSi,controlSi,casoNo,controlNo), nrow=2, byrow=TRUE)
chicuadrado = chisq.test(data)
pval = chicuadrado$p.value
if(pval < 0.05 ){
message(paste0(c(dataframe[i,1], dataframe[i,2], dataframe[i,3]), " "))
de<-data.frame(c(dataframe[i,1], dataframe[i,2], dataframe[i,3]))
names(de)<-c("Insertion","Case", "Control")
asociaciones <- rbind(asociaciones, de)
}
}
asociaciones = data.frame()
names(asociaciones)<-c("Insertion","Case", "Control")
for (i in 1:6929){
casoSi = dataframe[i,2]
casoNo = 30-dataframe[i,2]
controlSi = dataframe[i,3]
controlNo = 30-dataframe[i,3]
data = matrix(c(casoSi,controlSi,casoNo,controlNo), nrow=2, byrow=TRUE)
chicuadrado = chisq.test(data)
pval = chicuadrado$p.value
if(pval < 0.05 ){
message(paste0(c(dataframe[i,1], dataframe[i,2], dataframe[i,3]), " "))
de<-data.frame(dataframe[i,1], dataframe[i,2], dataframe[i,3])
names(de)<-c("Insertion","Case", "Control")
asociaciones <- rbind(asociaciones, de)
}
}
View(asociaciones)
write.table(asociaciones, file = "C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/TIPsConAsociaciones.csv", sep = ",", row.names = FALSE)
asociaciones = data.frame()
names(asociaciones)<-c("Insertion","Case", "Control", "P-valor")
for (i in 1:6929){
casoSi = dataframe[i,2]
casoNo = 30-dataframe[i,2]
controlSi = dataframe[i,3]
controlNo = 30-dataframe[i,3]
data = matrix(c(casoSi,controlSi,casoNo,controlNo), nrow=2, byrow=TRUE)
chicuadrado = chisq.test(data)
pval = chicuadrado$p.value
if(pval < 0.05 ){
message(paste0(c(dataframe[i,1], dataframe[i,2], dataframe[i,3], pval), " "))
de<-data.frame(dataframe[i,1], dataframe[i,2], dataframe[i,3], pval)
names(de)<-c("Insertion","Case", "Control", , "P-valor")
asociaciones <- rbind(asociaciones, de)
}
}
write.table(asociaciones, file = "C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/TIPsConAsociaciones.csv", sep = ",", row.names = FALSE)
dataframe = data.frame(TIPs)
asociaciones = data.frame()
names(asociaciones)<-c("Insertion","Case", "Control", "P-valor")
for (i in 1:6929){
casoSi = dataframe[i,2]
casoNo = 30-dataframe[i,2]
controlSi = dataframe[i,3]
controlNo = 30-dataframe[i,3]
data = matrix(c(casoSi,controlSi,casoNo,controlNo), nrow=2, byrow=TRUE)
chicuadrado = chisq.test(data)
pval = chicuadrado$p.value
if(pval < 0.05 ){
message(paste0(c(dataframe[i,1], dataframe[i,2], dataframe[i,3], pval), " "))
de<-data.frame(dataframe[i,1], dataframe[i,2], dataframe[i,3], pval)
names(de)<-c("Insertion","Case", "Control", "P-valor")
asociaciones <- rbind(asociaciones, de)
}
}
write.table(asociaciones, file = "C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/TIPsConAsociaciones.csv", sep = ",", row.names = FALSE)
load("C:/Users/SIMON/Google Drive/Doctorado/2019-2/Transcriptomica/Modulo2_visualizacion.RData")
plotMA(ddsShrink, alpha=0.05)
library(biomaRt)
library(DESeq2)
library(tidyverse)
## hacer los graficos de MA
x11()
plotMA(ddsShrink, alpha=0.05)
library(readxl)
TIPSenfermos <- read_excel("C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/TIPsXpaciente.xlsx", sheet="Enfermos")
TIPSsanos <- read_excel("C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/TIPsXpaciente.xlsx", sheet="Sanos")
windows()
boxplot(TIPSenfermos$Paciente~TIPSenfermos$TIPs, main= "boxplot",horizontal=TRUE)
windows()
boxplot(TIPSsanos$Paciente~TIPSsanos$TIPs, main= "boxplot",horizontal=TRUE)
#prueba de normalidad
pvalorEnfermos=shapiro.test(TIPSenfermos$TIPs) #p-valor = 0.1155
#prueba de normalidad
pvalorSanos=shapiro.test(TIPSsanos$TIPs) #p-valor = 0.6172
#analisis de asociaciones de cada uno de los TIPs en los cromosomas
TIPs <- read_excel("C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/analisisEnfermosVSsanos.xlsx", sheet="Sheet1")
dataframe = data.frame(TIPs)
asociaciones = data.frame()
names(asociaciones)<-c("Insertion","Case", "Control", "P-valor")
#prueba de normalidad
pvalorEnfermos=shapiro.test(TIPSenfermos$TIPs) #p-valor = 0.1155
#prueba de normalidad
pvalorSanos=shapiro.test(TIPSsanos$TIPs) #p-valor = 0.6172
#analisis de asociaciones de cada uno de los TIPs en los cromosomas
TIPs <- read_excel("C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/analisisEnfermosVSsanos.xlsx", sheet="Sheet1")
dataframe = data.frame(TIPs)
asociaciones = data.frame()
names(asociaciones)<-c("Insertion","Case", "Control", "P-valor")
for (i in 1:6929){
casoSi = dataframe[i,2]
casoNo = 30-dataframe[i,2]
controlSi = dataframe[i,3]
controlNo = 30-dataframe[i,3]
data = matrix(c(casoSi,controlSi,casoNo,controlNo), nrow=2, byrow=TRUE)
chicuadrado = chisq.test(data)
pval = chicuadrado$p.value
if(pval < 0.05 ){
message(paste0(c(dataframe[i,1], dataframe[i,2], dataframe[i,3], pval), " "))
de<-data.frame(dataframe[i,1], dataframe[i,2], dataframe[i,3], pval)
names(de)<-c("Insertion","Case", "Control", "P-valor")
asociaciones <- rbind(asociaciones, de)
}
}
chicuadrado
chicuadrado$statistic
library(readxl)
# ejemplo de los intervalos de confianza
#x=c(45,35,37,39.5,43.2,47.1,38,39.1,36.4,40)
#t.test(x,mu=40)
TIPSenfermos <- read_excel("C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/TIPsXpaciente.xlsx", sheet="Enfermos")
TIPSsanos <- read_excel("C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/TIPsXpaciente.xlsx", sheet="Sanos")
windows()
boxplot(TIPSenfermos$Paciente~TIPSenfermos$TIPs, main= "boxplot",horizontal=TRUE)
windows()
boxplot(TIPSsanos$Paciente~TIPSsanos$TIPs, main= "boxplot",horizontal=TRUE)
#t.test(presionSanguinea$Pacientes~presionSanguinea$grupo,alternative="two.sided")
#prueba de normalidad
pvalorEnfermos=shapiro.test(TIPSenfermos$TIPs) #p-valor = 0.1155
#prueba de normalidad
pvalorSanos=shapiro.test(TIPSsanos$TIPs) #p-valor = 0.6172
#analisis de asociaciones de cada uno de los TIPs en los cromosomas
TIPs <- read_excel("C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/analisisEnfermosVSsanos.xlsx", sheet="Sheet1")
dataframe = data.frame(TIPs)
asociaciones = data.frame()
names(asociaciones)<-c("Insertion","Case", "Control", "P-valor")
for (i in 1:6929){
casoSi = dataframe[i,2]
casoNo = 30-dataframe[i,2]
controlSi = dataframe[i,3]
controlNo = 30-dataframe[i,3]
data = matrix(c(casoSi,controlSi,casoNo,controlNo), nrow=2, byrow=TRUE)
chicuadrado = chisq.test(data)
medidaAsoc = sqrt(chicuadrado/(chicuadrado + 60))
pval = chicuadrado$p.value
if(pval < 0.05 ){
message(paste0(c(dataframe[i,1], dataframe[i,2], dataframe[i,3], pval, medidaAsoc), " "))
de<-data.frame(dataframe[i,1], dataframe[i,2], dataframe[i,3], pval, medidaAsoc)
names(de)<-c("Insertion","Case", "Control", "P-valor", "Asociacion")
asociaciones <- rbind(asociaciones, de)
}
}
write.table(asociaciones, file = "C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/TIPsConAsociaciones.csv", sep = ",", row.names = FALSE)
chicuadrado
chicuadrado$statistic
chicuadrado$statistic$X-squared
chicuadrado$statistic$
;
chicuadrado$statistic
View(chicuadrado)
as.double(chicuadrado$statistic)
library(readxl)
# ejemplo de los intervalos de confianza
#x=c(45,35,37,39.5,43.2,47.1,38,39.1,36.4,40)
#t.test(x,mu=40)
TIPSenfermos <- read_excel("C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/TIPsXpaciente.xlsx", sheet="Enfermos")
TIPSsanos <- read_excel("C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/TIPsXpaciente.xlsx", sheet="Sanos")
windows()
boxplot(TIPSenfermos$Paciente~TIPSenfermos$TIPs, main= "boxplot",horizontal=TRUE)
windows()
boxplot(TIPSsanos$Paciente~TIPSsanos$TIPs, main= "boxplot",horizontal=TRUE)
#t.test(presionSanguinea$Pacientes~presionSanguinea$grupo,alternative="two.sided")
#prueba de normalidad
pvalorEnfermos=shapiro.test(TIPSenfermos$TIPs) #p-valor = 0.1155
#prueba de normalidad
pvalorSanos=shapiro.test(TIPSsanos$TIPs) #p-valor = 0.6172
#analisis de asociaciones de cada uno de los TIPs en los cromosomas
TIPs <- read_excel("C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/analisisEnfermosVSsanos.xlsx", sheet="Sheet1")
dataframe = data.frame(TIPs)
asociaciones = data.frame()
names(asociaciones)<-c("Insertion","Case", "Control", "P-valor")
for (i in 1:6929){
casoSi = dataframe[i,2]
casoNo = 30-dataframe[i,2]
controlSi = dataframe[i,3]
controlNo = 30-dataframe[i,3]
data = matrix(c(casoSi,controlSi,casoNo,controlNo), nrow=2, byrow=TRUE)
chicuadrado = chisq.test(data)
medidaAsoc = sqrt(as.double(chicuadrado$statistic)/(as.double(chicuadrado$statistic) + 60))
pval = chicuadrado$p.value
if(pval < 0.05 ){
message(paste0(c(dataframe[i,1], dataframe[i,2], dataframe[i,3], pval, medidaAsoc), " "))
de<-data.frame(dataframe[i,1], dataframe[i,2], dataframe[i,3], pval, medidaAsoc)
names(de)<-c("Insertion","Case", "Control", "P-valor", "Asociacion")
asociaciones <- rbind(asociaciones, de)
}
}
write.table(asociaciones, file = "C:/Users/SIMON/Google Drive/Doctorado/Semillero/HERVs in Cancer/nuevo/TIPsConAsociaciones.csv", sep = ",", row.names = FALSE)
## KNN
x = c(78.3, 82.03)
n = c(100, 100)
prop.test(x,n,p=0,alternative = "two.sided", conf.level = 0.95)
prop.test(x,n,p=c(0,0),alternative = "two.sided", conf.level = 0.95)
?prop.test
prop.test(x,n,p=c(0,1),alternative = "two.sided", conf.level = 0.95)
prop.test(x,n,alternative = "two.sided", conf.level = 0.95)
## SVC
x = c(10.82, 81.98)
n = c(100, 100)
prop.test(x,n,alternative = "two.sided", conf.level = 0.95)
## Logistic Regression
x = c(90.6, 90.6)
n = c(100, 100)
prop.test(x,n,alternative = "two.sided", conf.level = 0.95)
## Multi-Layer Perceptron
x = c(79.89, 83.40)
n = c(100, 100)
prop.test(x,n,alternative = "two.sided", conf.level = 0.95)
## Kmeans
x = c(10.16, 68.34)
n = c(100, 100)
prop.test(x,n,alternative = "two.sided", conf.level = 0.95)
## Random Forest
x = c(66.75, 72.69)
n = c(100, 100)
prop.test(x,n,alternative = "two.sided", conf.level = 0.95)
## Decision Tree
x = c(69.78, 66.04)
n = c(100, 100)
prop.test(x,n,alternative = "two.sided", conf.level = 0.95)
####### significance test of best algorithms (LR and CNN)
#     LR      CNN
x = c(90.6, 94.43)
n = c(100, 100)
prop.test(x,n,alternative = "two.sided", conf.level = 0.95)
# load libraries
library(mlbench)
install.packages("mlbench")
install.packages("caret")
# load libraries
library(mlbench)
library(caret)
# SVM
#set.seed(7)
#fit.svm <- train(diabetes~., data=PimaIndiansDiabetes, method="svmRadial", trControl=control)
# kNN
#set.seed(7)
#fit.knn <- train(diabetes~., data=PimaIndiansDiabetes, method="knn", trControl=control)
# Random Forest
#set.seed(7)
#fit.rf <- train(diabetes~., data=PimaIndiansDiabetes, method="rf", trControl=control)
# collect resamples
lr = c(0.921472773, 0.954384567, 0.936542803, 0.930238155, 0.912912981, 0.932248662, 0.880724795, 0.958844396)
lda = c(0.916507517, 0.919060286, 0.927259195, 0.934076868, 0.925445141, 0.896733863, 0.964750978, 0.948648068)
svm = c(0.906639971, 0.962241496, 0.932756327, 0.892067285, 0.933705489, 0.912982254, 0.848676982, 0.938125761)
knn = c(0.810694155, 0.838264399, 0.898968759, 0.904737002, 0.87197762, 0.798668979, 0.805496552, 0.810789281)
rf = c(0.552525156, 0.502651414, 0.505533268, 0.470307874, 0.508970889, 0.595965027, 0.464202636, 0.530469923)
results <- resamples(list(LR=lr, LDA=lda, SVM=svm, KNN=knn, RF=rf))
# load the dataset
data(PimaIndiansDiabetes)
# prepare training scheme
control <- trainControl(method="repeatedcv", number=10, repeats=3)
# CART
set.seed(7)
fit.cart <- train(diabetes~., data=PimaIndiansDiabetes, method="rpart", trControl=control)
# LDA
set.seed(7)
fit.lda <- train(diabetes~., data=PimaIndiansDiabetes, method="lda", trControl=control)
# SVM
set.seed(7)
fit.svm <- train(diabetes~., data=PimaIndiansDiabetes, method="svmRadial", trControl=control)
fit.svm <- train(diabetes~., data=PimaIndiansDiabetes, method="svmRadial", trControl=control)
install.packages("e1071")
# prepare training scheme
control <- trainControl(method="repeatedcv", number=10, repeats=3)
# CART
set.seed(7)
fit.cart <- train(diabetes~., data=PimaIndiansDiabetes, method="rpart", trControl=control)
# LDA
set.seed(7)
fit.lda <- train(diabetes~., data=PimaIndiansDiabetes, method="lda", trControl=control)
# SVM
set.seed(7)
fit.svm <- train(diabetes~., data=PimaIndiansDiabetes, method="svmRadial", trControl=control)
# kNN
set.seed(7)
fit.knn <- train(diabetes~., data=PimaIndiansDiabetes, method="knn", trControl=control)
# Random Forest
set.seed(7)
fit.rf <- train(diabetes~., data=PimaIndiansDiabetes, method="rf", trControl=control)
fit.rf <- train(diabetes~., data=PimaIndiansDiabetes, method="rf", trControl=control)
# collect resamples
#lr = c(0.921472773, 0.954384567, 0.936542803, 0.930238155, 0.912912981, 0.932248662, 0.880724795, 0.958844396)
#lda = c(0.916507517, 0.919060286, 0.927259195, 0.934076868, 0.925445141, 0.896733863, 0.964750978, 0.948648068)
#svm = c(0.906639971, 0.962241496, 0.932756327, 0.892067285, 0.933705489, 0.912982254, 0.848676982, 0.938125761)
#knn = c(0.810694155, 0.838264399, 0.898968759, 0.904737002, 0.87197762, 0.798668979, 0.805496552, 0.810789281)
#rf = c(0.552525156, 0.502651414, 0.505533268, 0.470307874, 0.508970889, 0.595965027, 0.464202636, 0.530469923)
cat("results: ", fit.cart,"\n",sep="\t")
# collect resamples
#lr = c(0.921472773, 0.954384567, 0.936542803, 0.930238155, 0.912912981, 0.932248662, 0.880724795, 0.958844396)
#lda = c(0.916507517, 0.919060286, 0.927259195, 0.934076868, 0.925445141, 0.896733863, 0.964750978, 0.948648068)
#svm = c(0.906639971, 0.962241496, 0.932756327, 0.892067285, 0.933705489, 0.912982254, 0.848676982, 0.938125761)
#knn = c(0.810694155, 0.838264399, 0.898968759, 0.904737002, 0.87197762, 0.798668979, 0.805496552, 0.810789281)
#rf = c(0.552525156, 0.502651414, 0.505533268, 0.470307874, 0.508970889, 0.595965027, 0.464202636, 0.530469923)
print(paste("The first three notes are: ", fit.cart,sep="\t"))
results <- resamples(list(CART=fit.cart, LDA=fit.lda, SVM=fit.svm, KNN=fit.knn, RF=fit.rf))
print(results)
results$values
?diffs
??diffs
# difference in model predictions
diffs <- diff(results)
View(diffs)
# summarize p-values for pair-wise comparisons
summary(diffs)
# plot of differences
scales <- list(x=list(relation="free"), y=list(relation="free"))
bwplot(diffs, scales=scales)
# t-test between two models
compare_models(fit.svm, fit.lda)
?train
print(results)
?resamples
View(fit.knn)
diffs
?diff
results2 <- list(CART=lr, LDA=lda, SVM=svm, KNN=knn, RF=rf)
# difference in model predictions
diffs <- diff(results2)
results2
results2 <- list(lr, lda, svm, knn, rf)
# difference in model predictions
diffs <- diff(results2)
# difference in model predictions
diffs <- diff(lr)
# summarize p-values for pair-wise comparisons
summary(diffs)
# plot of differences
scales <- list(x=list(relation="free"), y=list(relation="free"))
bwplot(diffs, scales=scales)
resamples(list(CART=fit.cart, LDA=fit.lda, SVM=fit.svm, KNN=fit.knn, RF=fit.rf))
list(CART=fit.cart, LDA=fit.lda, SVM=fit.svm, KNN=fit.knn, RF=fit.rf)
# difference in model predictions
diffs <- diff(results)
# summarize p-values for pair-wise comparisons
summary(diffs)
# plot of differences
scales <- list(x=list(relation="free"), y=list(relation="free"))
bwplot(diffs, scales=scales)
# t-test between two models
compare_models(fit.svm, fit.lda)
# t-test between two models
compare_models(svm, lda)
?compare_models
results2 <- resamples(list(lr, lda, svm, knn, rf))
fit.cart
?diff
?diff
fit.svm
View(fit.cart)
# difference in model predictions
diffs <- diff(results)
diffs
View(diffs)
diffs$difs
bwplot(diffs, scales=scales)
results2 <- data.frame(lr,lda,svm,knn,rf)
results2
diff(results2)
summary(results2)
# load libraries
library(mlbench)
library(caret)
?train
nl1=c(4517,	5006,	5625,	5115,	5392,	4926,	6057,	5422,	5135,	14493,	4939)
nl2=c(11936,	12824,	13145,	10690,	11977,	12927,	12819,	13407,	12825,	13036,	14731,	13211)
nl3=c(6632, 5834, 5761)
del1=c(8809,	9857,	9662,	12141,	10018,	8866,	8848,	8657)
del2=c(9716,	9082,	9585,	9694,	9265,	9736,	9550,	17734,	9724,	10818,	9186,	9686,	9686)
del3=c(18320,	8763,	9087,	10627,	10549,	8972,	9159,	7741,	10412,	9621,	9287,	10483,	8998,	11608,	8948,	8230,	9202,	8990,	9303)
del4=c(11224,	8304,	9769,	8710,	8759,	8545,	8690,	8110,	8495,	8326,	8800,	12808,	8866,	9811,	8581,	8570,	8696,	8532,	8589,	8540,	6689,	8492,	12618,	8543)
retro=c(5583,	4063,	5030,	5057,	4795,	14049,	4777,	4931,	4868,	4835,	4915,	5132,	5535,	4532,	5104,	5180,	5286,	5007,	5360,	4952,	6080,	4826,	5075,	5138)
tat=c(13698,	13152,	10748,	10064,	7076)
vclade=c(5738,	5728,	5604,	6258,	5536,	17007,	5533,	5319,	15688,	7999,	8649,	8621,	15855,	8450,	8464,	8264,	7892,	8470,	8006,	7088,	15208,	8443,	16145,	8178,	7942,	8398,	10254)
boxplot(nl1)
boxplot(nl1, nl2)
boxplot(nl1, nl2, nl3, del1, del2, del3, del4, retro, tat, vclade)
boxplot(nl1, nl2, nl3, del1, del2, del3, del4, retro, tat, vclade, names=c("NL1","NL2","NL3","DEL1","DEL2","DEL3","DEL4","RETROFIT","TAT","V_CLADE" ))
boxplot(nl1, nl2, nl3, del1, del2, del3, del4, retro, tat, vclade, names=c("NL1","NL2","NL3","DEL1","DEL2","DEL3","DEL4","RETROFIT","TAT","V_CLADE" ), horizontal = true)
boxplot(nl1, nl2, nl3, del1, del2, del3, del4, retro, tat, vclade, names=c("NL1","NL2","NL3","DEL1","DEL2","DEL3","DEL4","RETROFIT","TAT","V_CLADE" ), horizontal = TRUE)
figure()
window()
windows()
boxplot(nl1, nl2, nl3, del1, del2, del3, del4, retro, tat, vclade, names=c("NL1","NL2","NL3","DEL1","DEL2","DEL3","DEL4","RETROFIT","TAT","V_CLADE" ), horizontal = TRUE)
windows()
boxplot(nl1, nl2, nl3, del1, del2, del3, del4, retro, tat, vclade, names=c("NL1","NL2","NL3","DEL1","DEL2","DEL3","DEL4","RETROFIT","TAT","V_CLADE" ))
# LTR size
nl1=c(120,	176,	235,	513,	697,	400,	419,	554,	412,	1306,	710,	501,	902,	442)
nl2=c(1315,	1094,	1094,	307,	1060,	1074,	1579,	1097,	1097,	3308,	1231)
nl3=c(374, 371, 310)
del1=c(1169,	1298,	1993,	1040,	594,	1228,	1179,	1123)
del2=c(1507,	968,	1171,	1476,	962,	1490,	1451,	8144,	1501,	2599,	1081,	1483,	1477)
del3=c(638,	683,	1129,	1129,	1042,	1205,	1251,	2388,	1627,	1231,	2469,	878, 3474, 855,	1170,	1009,	1199)
del4=c(2913,	603,	806,	841,	819,	820,	830,	447,	816,	630,	838,	776,	807,	912,	798,	804,	791,	820,	829,	793,	789,	839,	515)
retro=c(111,	229,	237,	245,	156,	174,	174,	176,	177,	121,	176,	175,	117,	152,	113,	108,	109,	109,	135,	119,	103,	109,	118)
tat=c(526,	520,	520,	313,	753)
vclade=c(337,	148,	321,	318,	319,	3132,	316,	5463,	347,	776,	784,	7680,	774,	774,	693,	188,	815,	433,	364,	7509,	740,	7766,	471,	305,	738,	1491)
windows()
boxplot(nl1, nl2, nl3, del1, del2, del3, del4, retro, tat, vclade, names=c("NL1","NL2","NL3","DEL1","DEL2","DEL3","DEL4","RETROFIT","TAT","V_CLADE" ))
# load libraries
library(mlbench)
library(caret)
?train
# Calculate statistical significance of difference between model predictions
# load libraries
library(mlbench)
library(caret)
library(doParallel)
# load the dataset
setwd("C:/Users/SIMON/Google Drive (simon.orozcoa@autonoma.edu.co)/Doctorado/Ph.D. thesis SIMON/Repo/MLinTEs/CodingSchemes/Exp8_9")
repbase <- read.csv(file='repbase_LTRs_I_3dom.fasta.lineages_final.kmers')
# prepare training scheme
control <- trainControl(method="repeatedcv", number=10, repeats=3)
cl <- makePSOCKcluster(8)
registerDoParallel(cl)
# Logistic Regression
set.seed(7)
fit.lr <- train(x = repbase[,2:ncol(repbase)], y = repbase[,1], method="LogitBoost", trControl=control)
# LDA
set.seed(7)
fit.lda <- train(repbase[,2:ncol(repbase)], repbase[,1], method="lda", trControl=control)
# kNN
set.seed(7)
fit.knn <- train(repbase[,2:ncol(repbase)], repbase[,1], method="knn", trControl=control)
